plugins {
	id 'java-library'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'com.diffplug.spotless' version '6.13.0'
	id 'net.ltgt.errorprone' version '3.1.0'
	id 'com.github.spotbugs' version '5.2.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = 'saber'
group = 'io.github.drawmoon.saber'
version = '0.0.1'
if (!project.hasProperty('release')) {
	version += '-SNAPSHOT'
}

ext {
	guavaVersion = '32.1.3-jre'
	errorproneVersion = '2.10.0'
	junitVersion = '5.10.0'
	hamcrestVersion = '2.2'
}

repositories {
	mavenCentral()
}

dependencies {
	testImplementation platform("org.junit:junit-bom:$junitVersion")
	testImplementation "org.junit.jupiter:junit-jupiter"
	testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"

	implementation "com.google.guava:guava:$guavaVersion"
	errorprone "com.google.errorprone:error_prone_core:$errorproneVersion"
}

tasks.withType(JavaCompile).configureEach {
	options.errorprone.disableWarningsInGeneratedCode = true
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

spotless {
	format 'misc', {
		target '*.gradle', '.gitattributes', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		target '**/*.java'

		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		googleJavaFormat('1.7')
		formatAnnotations()
		licenseHeaderFile("$rootDir/LICENSE")
	}
}

spotbugs {
	effort = 'max'
	reportLevel = 'low'
	excludeFilter = file("$rootDir/spotbugs-filter.xml")
}

spotbugsMain {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}


java {
	withJavadocJar()
	withSourcesJar()
}

javadoc.options {
	encoding = 'UTF-8'
	if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
		links 'https://docs.oracle.com/javase/8/docs/api/'
	} else {
		links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
	}
}

artifacts {
	archives javadocJar, sourcesJar, shadowJar
}
